<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).
<lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#Base" name="6">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="6" map="Button2" name="Menu Tool"/>
    <tool lib="6" map="Button3" name="Menu Tool"/>
    <tool lib="6" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="6" name="Poke Tool"/>
    <tool lib="6" name="Edit Tool"/>
    <tool lib="6" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="tristate" val="false"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(300,300)" to="(360,300)"/>
    <wire from="(370,120)" to="(370,190)"/>
    <wire from="(190,140)" to="(250,140)"/>
    <wire from="(130,180)" to="(180,180)"/>
    <wire from="(130,100)" to="(130,180)"/>
    <wire from="(360,220)" to="(360,300)"/>
    <wire from="(300,200)" to="(400,200)"/>
    <wire from="(120,140)" to="(160,140)"/>
    <wire from="(210,180)" to="(250,180)"/>
    <wire from="(100,310)" to="(200,310)"/>
    <wire from="(360,220)" to="(400,220)"/>
    <wire from="(120,320)" to="(210,320)"/>
    <wire from="(200,210)" to="(200,310)"/>
    <wire from="(370,190)" to="(400,190)"/>
    <wire from="(100,200)" to="(120,200)"/>
    <wire from="(110,100)" to="(130,100)"/>
    <wire from="(140,100)" to="(160,100)"/>
    <wire from="(180,180)" to="(200,180)"/>
    <wire from="(170,100)" to="(250,100)"/>
    <wire from="(160,140)" to="(170,140)"/>
    <wire from="(130,100)" to="(140,100)"/>
    <wire from="(110,100)" to="(110,280)"/>
    <wire from="(110,280)" to="(250,280)"/>
    <wire from="(210,320)" to="(220,320)"/>
    <wire from="(240,320)" to="(250,320)"/>
    <wire from="(200,210)" to="(210,210)"/>
    <wire from="(230,210)" to="(240,210)"/>
    <wire from="(240,210)" to="(250,210)"/>
    <wire from="(100,100)" to="(110,100)"/>
    <wire from="(120,200)" to="(120,320)"/>
    <wire from="(120,140)" to="(120,200)"/>
    <wire from="(300,120)" to="(370,120)"/>
    <comp lib="1" loc="(170,100)" name="Controlled Inverter"/>
    <comp lib="1" loc="(190,140)" name="Controlled Inverter"/>
    <comp lib="1" loc="(210,180)" name="Controlled Inverter"/>
    <comp lib="1" loc="(300,200)" name="AND Gate"/>
    <comp lib="1" loc="(450,210)" name="OR Gate"/>
    <comp lib="0" loc="(100,310)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="C"/>
    </comp>
    <comp lib="1" loc="(240,210)" name="NOT Gate"/>
    <comp lib="0" loc="(100,100)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="A"/>
    </comp>
    <comp lib="0" loc="(100,200)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="B"/>
    </comp>
    <comp lib="1" loc="(240,320)" name="Controlled Inverter"/>
    <comp lib="1" loc="(300,120)" name="AND Gate"/>
    <comp lib="1" loc="(300,300)" name="AND Gate"/>
  </circuit>
</project>
